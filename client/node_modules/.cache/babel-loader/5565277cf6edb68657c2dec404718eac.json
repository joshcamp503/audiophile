{"ast":null,"code":"var _s = $RefreshSig$();\n\n// Returns a string indicating the device type\n// ie = 'mobile', 'tablet', or 'desktop'\n// used to change images based on media by pulling from\n// db object with device type as key and img path as value\nimport { useState, useLayoutEffect } from \"react\";\nexport const useMediaSize = () => {\n  _s();\n\n  const getCurrentDevice = () => {\n    const deviceWidth = window.innerWidth;\n    if (deviceWidth >= 1200) return 'desktop';\n    if (deviceWidth >= 600) return 'tablet';\n    return 'mobile';\n  };\n\n  const [mediaSize, setMediaSize] = useState(getCurrentDevice());\n  useLayoutEffect(() => {\n    const queries = ['(max-width: 599px)', '(min-width: 600px) and (max-width: 1199px)', '(min-width: 1200px)']; // returns first string from queries array that matches media query\n\n    const currentMedia = queries.find(query => {\n      return window.matchMedia(query).matches;\n    });\n\n    const changeMedia = query => {\n      switch (query) {\n        case '(max-width: 599px)':\n          setMediaSize('mobile');\n          return;\n\n        case '(min-width: 600px) and (max-width: 1199px)':\n          setMediaSize('tablet');\n          return;\n\n        case '(min-width: 1200px)':\n          setMediaSize('desktop');\n          return;\n\n        default:\n          setMediaSize('default');\n          return;\n      }\n    }; // returns mediaQueryList object \n\n\n    matchMedia(currentMedia).onchange = () => {\n      const newMedia = queries.find(query => {\n        return window.matchMedia(query).matches;\n      });\n      changeMedia(newMedia);\n    }; // console.log(mediaSize)\n\n  }, [mediaSize]);\n  return mediaSize;\n};\n\n_s(useMediaSize, \"bzrtC0ZdRO4/wEnh67tc/kpGG4c=\");","map":{"version":3,"sources":["/home/joshcamp503/Desktop/Code/frontend-mentor-projects/audiophile-ecommerce-website/src/hooks/useMediaSize.js"],"names":["useState","useLayoutEffect","useMediaSize","getCurrentDevice","deviceWidth","window","innerWidth","mediaSize","setMediaSize","queries","currentMedia","find","query","matchMedia","matches","changeMedia","onchange","newMedia"],"mappings":";;AAAA;AACA;AACA;AACA;AAGA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,OAA1C;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,WAAW,GAAGC,MAAM,CAACC,UAA3B;AACA,QAAGF,WAAW,IAAI,IAAlB,EAAwB,OAAO,SAAP;AACxB,QAAGA,WAAW,IAAI,GAAlB,EAAuB,OAAO,QAAP;AACvB,WAAO,QAAP;AACD,GALD;;AAOA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACG,gBAAgB,EAAjB,CAA1C;AAEAF,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMQ,OAAO,GAAG,CACd,oBADc,EAEd,4CAFc,EAGd,qBAHc,CAAhB,CADoB,CAOpB;;AACA,UAAMC,YAAY,GAAGD,OAAO,CAACE,IAAR,CAAaC,KAAK,IAAI;AACzC,aAAOP,MAAM,CAACQ,UAAP,CAAkBD,KAAlB,EAAyBE,OAAhC;AACD,KAFoB,CAArB;;AAIA,UAAMC,WAAW,GAAIH,KAAD,IAAW;AAC7B,cAAQA,KAAR;AACE,aAAK,oBAAL;AACEJ,UAAAA,YAAY,CAAC,QAAD,CAAZ;AACA;;AACF,aAAK,4CAAL;AACEA,UAAAA,YAAY,CAAC,QAAD,CAAZ;AACA;;AACF,aAAK,qBAAL;AACEA,UAAAA,YAAY,CAAC,SAAD,CAAZ;AACA;;AACF;AACEA,UAAAA,YAAY,CAAC,SAAD,CAAZ;AACA;AAZJ;AAcD,KAfD,CAZoB,CA6BpB;;;AACAK,IAAAA,UAAU,CAACH,YAAD,CAAV,CAAyBM,QAAzB,GAAoC,MAAM;AACxC,YAAMC,QAAQ,GAAGR,OAAO,CAACE,IAAR,CAAaC,KAAK,IAAI;AACrC,eAAOP,MAAM,CAACQ,UAAP,CAAkBD,KAAlB,EAAyBE,OAAhC;AACD,OAFgB,CAAjB;AAGAC,MAAAA,WAAW,CAACE,QAAD,CAAX;AACD,KALD,CA9BoB,CAoCpB;;AAED,GAtCc,EAsCZ,CAACV,SAAD,CAtCY,CAAf;AAwCA,SAAOA,SAAP;AAED,CApDM;;GAAML,Y","sourcesContent":["// Returns a string indicating the device type\n// ie = 'mobile', 'tablet', or 'desktop'\n// used to change images based on media by pulling from\n// db object with device type as key and img path as value\n\n\nimport { useState, useLayoutEffect } from \"react\";\n\nexport const useMediaSize = () => {\n  const getCurrentDevice = () => {\n    const deviceWidth = window.innerWidth\n    if(deviceWidth >= 1200) return 'desktop'\n    if(deviceWidth >= 600) return 'tablet'\n    return 'mobile'\n  }\n\n  const [mediaSize, setMediaSize] = useState(getCurrentDevice())\n\n  useLayoutEffect(() => {\n    const queries = [\n      '(max-width: 599px)', \n      '(min-width: 600px) and (max-width: 1199px)', \n      '(min-width: 1200px)'\n    ]\n    \n    // returns first string from queries array that matches media query\n    const currentMedia = queries.find(query => {\n      return window.matchMedia(query).matches\n    })\n\n    const changeMedia = (query) => {\n      switch (query) {\n        case '(max-width: 599px)':\n          setMediaSize('mobile')\n          return\n        case '(min-width: 600px) and (max-width: 1199px)':\n          setMediaSize('tablet')\n          return\n        case '(min-width: 1200px)':\n          setMediaSize('desktop')\n          return\n        default:\n          setMediaSize('default')\n          return\n      }\n    }\n\n    // returns mediaQueryList object \n    matchMedia(currentMedia).onchange = () => {\n      const newMedia = queries.find(query => {\n        return window.matchMedia(query).matches\n      })\n      changeMedia(newMedia)\n    }\n    // console.log(mediaSize)\n\n  }, [mediaSize])\n  \n  return mediaSize\n\n};\n"]},"metadata":{},"sourceType":"module"}