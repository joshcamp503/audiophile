{"ast":null,"code":"var _s = $RefreshSig$();\n\n// Returns a string indicating the device type\n// ie = 'mobile', 'tablet', or 'desktop'\n// used to change images based on media by pulling from\n// db object with device type as key and img path as value\nimport { useState, useLayoutEffect } from \"react\";\nexport const useMediaSize = device => {\n  _s();\n\n  const [mediaSize, setMediaSize] = useState(device);\n  useLayoutEffect(() => {\n    const queries = ['(max-width: 599px)', '(min-width: 600px) and (max-width: 1199px)', '(min-width: 1200px)']; // returns first string from queries array that matches media query\n\n    const currentMedia = queries.find(query => {\n      return window.matchMedia(query).matches;\n    });\n\n    const changeMedia = () => {\n      console.log('onchange fired'); // switch (media) {\n      //   case '(max-width: 599px)':\n      //     return setMediaSize('mobile')\n      //   case '(min-width: 600px) and (max-width: 1199px)':\n      //     return setMediaSize('tablet')\n      //   case '(min-width: 1200px)':\n      //     return setMediaSize('desktop')\n      //   default:\n      //     return setMediaSize('default')\n      // }\n    }; // returns mediaQueryList object \n\n\n    matchMedia(currentMedia).onchange = () => {\n      // console.log('onchange fired')\n      // console.log(mql.media)\n      changeMedia();\n    };\n\n    console.log(mediaSize);\n  }, [mediaSize]);\n  return mediaSize;\n};\n\n_s(useMediaSize, \"AwZoWof96nmD5CoaIAyRWLb6Yec=\");","map":{"version":3,"sources":["/home/joshcamp503/Desktop/Code/frontend-mentor-projects/audiophile-ecommerce-website/src/hooks/useMediaSize.js"],"names":["useState","useLayoutEffect","useMediaSize","device","mediaSize","setMediaSize","queries","currentMedia","find","query","window","matchMedia","matches","changeMedia","console","log","onchange"],"mappings":";;AAAA;AACA;AACA;AACA;AAGA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,OAA1C;AAEA,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY;AAAA;;AACtC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAACG,MAAD,CAA1C;AAEAF,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMK,OAAO,GAAG,CACd,oBADc,EAEd,4CAFc,EAGd,qBAHc,CAAhB,CADoB,CAOpB;;AACA,UAAMC,YAAY,GAAGD,OAAO,CAACE,IAAR,CAAaC,KAAK,IAAI;AACzC,aAAOC,MAAM,CAACC,UAAP,CAAkBF,KAAlB,EAAyBG,OAAhC;AACD,KAFoB,CAArB;;AAIA,UAAMC,WAAW,GAAG,MAAM;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADwB,CAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAZD,CAZoB,CA0BpB;;;AACAJ,IAAAA,UAAU,CAACJ,YAAD,CAAV,CAAyBS,QAAzB,GAAoC,MAAM;AACxC;AACA;AACAH,MAAAA,WAAW;AACZ,KAJD;;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AAED,GAlCc,EAkCZ,CAACA,SAAD,CAlCY,CAAf;AAmCA,SAAOA,SAAP;AAED,CAxCM;;GAAMF,Y","sourcesContent":["// Returns a string indicating the device type\n// ie = 'mobile', 'tablet', or 'desktop'\n// used to change images based on media by pulling from\n// db object with device type as key and img path as value\n\n\nimport { useState, useLayoutEffect } from \"react\";\n\nexport const useMediaSize = (device) => {\n  const [mediaSize, setMediaSize] = useState(device)\n\n  useLayoutEffect(() => {\n    const queries = [\n      '(max-width: 599px)', \n      '(min-width: 600px) and (max-width: 1199px)', \n      '(min-width: 1200px)'\n    ]\n    \n    // returns first string from queries array that matches media query\n    const currentMedia = queries.find(query => {\n      return window.matchMedia(query).matches\n    })\n\n    const changeMedia = () => {\n      console.log('onchange fired')\n      // switch (media) {\n      //   case '(max-width: 599px)':\n      //     return setMediaSize('mobile')\n      //   case '(min-width: 600px) and (max-width: 1199px)':\n      //     return setMediaSize('tablet')\n      //   case '(min-width: 1200px)':\n      //     return setMediaSize('desktop')\n      //   default:\n      //     return setMediaSize('default')\n      // }\n    }\n\n    // returns mediaQueryList object \n    matchMedia(currentMedia).onchange = () => {\n      // console.log('onchange fired')\n      // console.log(mql.media)\n      changeMedia()\n    }\n    console.log(mediaSize)\n\n  }, [mediaSize])\n  return mediaSize\n\n};\n"]},"metadata":{},"sourceType":"module"}