{"ast":null,"code":"var _s = $RefreshSig$();\n\n// Returns a string indicating the device type\n// ie = 'mobile', 'tablet', or 'desktop'\n// used to change images based on media by pulling from\n// db object with device type as key and img path as value\nimport { useState, useEffect } from \"react\";\nexport const useMediaSize = device => {\n  _s();\n\n  const [mediaSize, setMediaSize] = useState(device);\n  useEffect(() => {\n    const queries = ['(max-width: 599px)', '(max-width: 1199px)', '(min-width: 1200px)']; // returns first string from queries array that matches media query\n\n    const currentMedia = queries.find(query => {\n      return window.matchMedia(query).matches;\n    });\n\n    const changeMedia = currentMedia => {\n      switch (currentMedia) {\n        case '(max-width: 599px)':\n          console.log('mobile');\n          return setMediaSize('mobile');\n\n        case '(max-width: 1199px)':\n          console.log('tablet');\n          return setMediaSize('tablet');\n\n        case '(min-width: 1200px)':\n          console.log('desktop');\n          return setMediaSize('desktop');\n\n        default:\n          return setMediaSize('mobile');\n      }\n    }; // returns mediaQueryList object \n\n\n    const mql = matchMedia(currentMedia);\n    mql.addEventListener('change', changeMedia(currentMedia), {\n      once: true\n    });\n  }, [mediaSize]);\n  return mediaSize;\n};\n\n_s(useMediaSize, \"IfaMFa8KFYqxsMhrzx+g3utchvU=\");","map":{"version":3,"sources":["/home/joshcamp503/Desktop/Code/frontend-mentor-projects/audiophile-ecommerce-website/src/hooks/useMediaSize.js"],"names":["useState","useEffect","useMediaSize","device","mediaSize","setMediaSize","queries","currentMedia","find","query","window","matchMedia","matches","changeMedia","console","log","mql","addEventListener","once"],"mappings":";;AAAA;AACA;AACA;AACA;AAGA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY;AAAA;;AACtC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAACG,MAAD,CAA1C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,OAAO,GAAG,CACd,oBADc,EAEd,qBAFc,EAGd,qBAHc,CAAhB,CADc,CAOd;;AACA,UAAMC,YAAY,GAAGD,OAAO,CAACE,IAAR,CAAaC,KAAK,IAAI;AACzC,aAAOC,MAAM,CAACC,UAAP,CAAkBF,KAAlB,EAAyBG,OAAhC;AACD,KAFoB,CAArB;;AAIA,UAAMC,WAAW,GAAIN,YAAD,IAAkB;AACpC,cAAQA,YAAR;AACE,aAAK,oBAAL;AACEO,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,iBAAOV,YAAY,CAAC,QAAD,CAAnB;;AACF,aAAK,qBAAL;AACES,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,iBAAOV,YAAY,CAAC,QAAD,CAAnB;;AACF,aAAK,qBAAL;AACES,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,iBAAOV,YAAY,CAAC,SAAD,CAAnB;;AACF;AACE,iBAAOA,YAAY,CAAC,QAAD,CAAnB;AAXJ;AAaD,KAdD,CAZc,CA4Bd;;;AACA,UAAMW,GAAG,GAAGL,UAAU,CAACJ,YAAD,CAAtB;AACAS,IAAAA,GAAG,CAACC,gBAAJ,CAAqB,QAArB,EAA+BJ,WAAW,CAACN,YAAD,CAA1C,EAA0D;AAAEW,MAAAA,IAAI,EAAE;AAAR,KAA1D;AAED,GAhCQ,EAgCN,CAACd,SAAD,CAhCM,CAAT;AAkCA,SAAOA,SAAP;AAED,CAvCM;;GAAMF,Y","sourcesContent":["// Returns a string indicating the device type\n// ie = 'mobile', 'tablet', or 'desktop'\n// used to change images based on media by pulling from\n// db object with device type as key and img path as value\n\n\nimport { useState, useEffect } from \"react\";\n\nexport const useMediaSize = (device) => {\n  const [mediaSize, setMediaSize] = useState(device)\n\n  useEffect(() => {\n    const queries = [\n      '(max-width: 599px)', \n      '(max-width: 1199px)', \n      '(min-width: 1200px)'\n    ]\n    \n    // returns first string from queries array that matches media query\n    const currentMedia = queries.find(query => {\n      return window.matchMedia(query).matches\n    })\n\n    const changeMedia = (currentMedia) => {\n      switch (currentMedia) {\n        case '(max-width: 599px)':\n          console.log('mobile')\n          return setMediaSize('mobile')\n        case '(max-width: 1199px)':\n          console.log('tablet')\n          return setMediaSize('tablet')\n        case '(min-width: 1200px)':\n          console.log('desktop')\n          return setMediaSize('desktop')\n        default:\n          return setMediaSize('mobile')\n      }\n    }\n\n    // returns mediaQueryList object \n    const mql = matchMedia(currentMedia)\n    mql.addEventListener('change', changeMedia(currentMedia), { once: true })\n\n  }, [mediaSize])\n\n  return mediaSize\n\n};\n"]},"metadata":{},"sourceType":"module"}